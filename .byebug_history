c
Email.count
Email.delete_all
c
Email.where(score: 0.96).count
c
129552/50
Email.where.not(score: nil).order('score').pluck(:score)[(129522/50)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/70)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/60)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/80)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/150)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/100)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/20)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/15)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/12)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/10)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/8)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/4)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/3)]
Email.where.not(score: nil).order('score').pluck(:score)[(129522/100*30)]
Email.where.not(score: nil).order('score').pluck(:score)[64500]
Email.where.not(score: nil).order('score').pluck(:score).count
Email.where.not(score: nil).order('score').pluck(:score)
Email.where.not(score: nil).order('score').count
Email.where.not(score: nil).sort_by(:score).count
Email.where.not(score: nil).sort(score).count
Email.where.not(score: nil).sort(:score).count
Email.where(score: nil).destroy_all
Email.where(score: nil).count
Email.where(mx_found: false).pluck(:score).sort[30]
Email.where(mx_found: false).pluck(:score).sort[3000]
Email.where(mx_found: false).pluck(:score).sort[2000]
Email.where(mx_found: false).pluck(:score).sort[2350]
Email.where(mx_found: false).pluck(:score).sort[2750]
Email.where(mx_found: false).count
Email.where(smtp_check: false).pluck(:score).sort[10400]
Email.where(smtp_check: false).pluck(:score).order[10400]
Email.where(smtp_check: false).pluck(:score).count
Email.where(smtp_check: false).pluck(:score)
Email.where(smtp_check: false).count
Email.where(domain: 'yourdomain.com').destroy_all
Email.where(domain: 'yourdomain.com').count
Email.where(domain: 'email.com').destroy_all
Email.where.not(domain: 'example.com').where.not(score: nil).count
Email.where(domain: 'example.com').destroy_all
Email.where(domain: 'example.com').where.destroy_all
Email.where(domain: 'example.com').where(score: nil).destroy_all
Email.where.not(domain: 'example.com').where.not(score: nil).count
exit
c
exit
row[1].delete('{').delete('}').split(',')
row
row[1].delete('{').delete('}').split('s')
row[1].split('s')
row[1].class
row[1]
row
c
row
c
exit
c
row
n
row
exit
row
row.to_a
row.to_h
row
exit
continue
row.to_hash
row
c
Email.count
Email.delete_all
Email.all
c
stats = Sidekiq::Stats.new
workers = Sidekiq::Workers
workers = Sidekiq::Workers.new
Sidekiq
Sidekiq::Queue.all
c
Key.connection
Key
c
Sidekiq.server?
Sidekiq.server
Sidekiq.start
Sidekiq.new
Sidekiq
c
KeysWorker.perform_async
